AWSTemplateFormatVersion: "2010-09-09"
Description: Beginners challenge (tier 1). Implement a simple web server using AWS.

Parameters:
  EnvironmentName: 
    Description: An environment name that is prefixed to resource names
    Type: String
  

  DomainName:
    Description: The name of the domain. Specify a fully qualified domain name, for example, www.example.com
    Default: 'www.apperdevops.com'
    Type: String

  RecordType:
    Description: The DNS record type.
    Type: String

  ResourceRecords:
    Description: One or more values that correspond with the value that you specified for the Type property.
    Type: CommaDelimitedList
 
  TTL:
    Description: DNS record TTL.
    Default: '86400'
    Type: String

  ZoneName:
    AllowedPattern: (^[a-z][a-z][a-z]-[a-z]-[a-z][a-z][a-z]$)
    Description: Application environment for which this network is being created. e.g. racoros-tierX
    Type: String
    AllowedValues:
      - 'racoros-tier1'


  VpcCIDR:
    Description: CIDR block for VPC.
    Type: String
    Default: 10.1.0.0/16

  PublicSubnetCIDR:
    Description: CIDR block for public subnet.
    Type: String
    Default: 10.2.0.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.3.1.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.3.2.0/24

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.

Resources:
  RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name:
        Fn::Join:
        - '.'
        - - Ref: DomainName
          - Ref: ZoneName
      Type:
        Ref: RecordType
      TTL:
        Ref: TTL
      ResourceRecords:
        Ref: ResourceRecords

  cloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        Aliases:
          Fn::Join:
          - '.'
          - - Ref: ZoneName
            - Ref: DomainName
      ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'
 
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName




Outputs:

