AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates vpc with public, private, database subnets

Parameters:
  EnvironmentName:
    Default: RacorosTier1
    Description: Please enter the Environment Name for this VPC
    Type: String

  VpcCidr:
    Description: IP subnet for VPC. Default "10.4.0.0/16"
    Type: String
    Default: 10.4.0.0/16

  PublicSubnet1Cidr:
    Description:  Public IP subnet under AZ1.Default "10.4.1.0/24"
    Type: String
    Default: 10.4.1.0/24
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x

  PublicSubnet2Cidr:
    Type: String
    Description:  Public IP subnet under AZ2.Default "10.4.2.0/24"
    Default: 10.4.2.0/24
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x

  PrivateSubnet1Cidr:
    Description: Private IP subnet used for AZ1.  Default "10.4.3.0/24"
    Type: String
    Default: 10.4.3.0/24
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x

  PrivateSubnet2Cidr:
    Description: Private IP subnet used for AZ2.  Default "10.4.4.0/24"
    Type: String
    Default: 10.4.4.0/24
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x

  DatabaseSubnet1Cdir:
    Description: Database IP subnet used for AZ1.  Default "10.4.13.0/24"
    Type: String
    Default: 10.4.13.0/24
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x

  DatabaseSubnet2Cdir:
    Description: Database IP subnet used for AZ1.  Default "10.4.14.0/24"
    Type: String
    Default: 10.4.14.0/24
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet1Cidr
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Public Subnet under AZ1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet2Cidr
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Public Subnet under AZ2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Public route table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC      
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: false
      CidrBlock:
        Ref: PrivateSubnet1Cidr
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC      
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: false
      CidrBlock:
        Ref: PrivateSubnet2Cidr
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Private Subnet (AZ2)

  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC      
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: false
      CidrBlock:
        Ref: DatabaseSubnet1Cdir
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Database Subnet (AZ1)

  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC      
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: false
      CidrBlock:
        Ref: DatabaseSubnet2Cdir
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Database Subnet (AZ2)

  EipNatAZ1:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties: 
      Domain: vpc
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Elastic IP for NAT gateway.

  EipNatAZ2:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties: 
      Domain: vpc
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - Elastic IP for NAT gateway under AZ 2.

  NatAZ1:
    DependsOn: InternetGateway
    Type: AWS::EC2::NatGateway
    Properties: 
      SubnetId: !Ref PublicSubnet1
      AllocationId:
        Fn::GetAtt:
        - EipNatAZ1
        - AllocationId
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - NAT under AZ1

  NatAZ2:
    Type: AWS::EC2::NatGateway
    Properties: 
      SubnetId: !Ref PublicSubnet2
      AllocationId:
        Fn::GetAtt:
        - EipNatAZ2
        - AllocationId
      Tags:
        - Key: Name
          Value: 
            Fn::Join:
            - '-'
            - - !Ref AWS::StackName
              - NAT under AZ2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Private Routes (AZ1)
      - Key: Tier
        Value: Private

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Private Routes (AZ2)
      - Key: Tier
        Value: Private

  PrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatAZ1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatAZ2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref DatabaseSubnet1

  DatabaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref DatabaseSubnet2

Outputs:
  outputVpcId:
    Description: The VPC ID for Apper Challenge
    Value: !Ref VPC
    Export:
      Name: VpcId

  outputVpcCidrBlock:
    Description: The set of IP addresses for the VPC. For example, 10.0.0.0/16.
    Value:
      Fn::GetAtt:
      - VPC
      - "CidrBlock"
    Export:
      Name: VpcCidrBlock
  
  outputVpcDefaultNetworkAcl:
    Description: The default network ACL ID that is associated with the VPC. For example, acl-814dafe3.
    Value:
      Fn::GetAtt:
      - VPC
      - "DefaultNetworkAcl"
    Export:
      Name: VpcDefaultNetworkAcl

  outputVpcDefaultSecurityGroup:
    Description: The default security group ID that is associated with the VPC. For example, sg-b178e0d3.
    Value:
      Fn::GetAtt:
      - VPC
      - "DefaultSecurityGroup"
    Export: 
      Name: VpcDefaultSecurityGroup

  outputEipNatAZ1:
    Description: VPC EIP 1
    Value:
      Ref: NatAZ1

  outputEipNatAZ2:
    Description: VPC EIP 2
    Value:
      Ref: NatAZ2
  
  outputPublicSubnet1:
    Description: Public Subnet AZ1
    Value:
      Ref: PublicSubnet1

  outputPublicSubnet2:
    Description: Public Subnet AZ2
    Value:
      Ref: PublicSubnet2

  outputPublicRouteTable:
    Description: Public route table
    Value:
      Ref: PublicRouteTable
 
  outputPrivateRouteTable1:
    Description: Private AZ1 route table
    Value:
      Ref: PrivateRouteTable1
  
  outputPrivateRouteTable2:
    Description: Private AZ2 route table
    Value:
      Ref: PrivateRouteTable2
  
  outputPrivateSubnet1:
    Description: Private Subnet AZ1
    Value:
      Ref: PrivateSubnet1
  
  outputPrivateSubnet2:
    Description: Private Subnet AZ2
    Value:
      Ref: PrivateSubnet2
 
  outputDatabaseSubnet1:
    Description: Database Subnet AZ1
    Value:
      Ref: DatabaseSubnet1
  
  outputDatabaseSubnet2:
    Description: Database Subnet AZ2
    Value:
      Ref: DatabaseSubnet2

  outputPublicSubnet1Cidr:
    Description: Public Subnet CDIR
    Value:
      Ref: PublicSubnet1Cidr
  
  outputPublicSubnet2Cidr:
    Description: Public Subnet CDIR
    Value:
      Ref: PublicSubnet2Cidr

  outputPrivateSubnet1Cidr:
    Description: Private Subnet CDIR
    Value:
      Ref: PrivateSubnet1Cidr
  
  outputPrivateSubnet2Cidr:
    Description: Private Subnet CDIR
    Value:
      Ref: PrivateSubnet1Cidr