AWSTemplateFormatVersion: "2010-09-09"
Description: This template creates RDS MySQL Instance

Transform: [PyPlate]


Parameters:
  DBInstanceID:
    Default: apperdbinstance
    Description: Database instance for tier application.
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: >-
      Must begin with a letter and must not end with a hyphen or contain two
  
  DBInstanceClass:
    Default: db.t2.micro
    Description: Database instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.

  DBAllocatedStorage:
    Default: '10'
    Description: The size of the database (GiB)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 10 and 65536 GiB.

  DBName:
    Default: mysqlRDS
    Description: Please enter the desired DB Name
    Type: String

  DBUsername:
    Default: apper
    Description: Username for database account.
    Type: String

  DBPassword:
    Default: app3r!I$Aw3soM3
    Description: Password for database account.
    Type: String

  DBPort:
    Default: 3306
    Description: Use default mysql port tcp/3306.
    Type: String

  DBSubnetGroupIDs:
    Description: Please select the Subnet ID
    ConstraintDescription: "Must be a list of subnet IDs"
    Type: CommaDelimitedList

  DBSubnetGroupName:
    Default: MysqlDBSubnetGroup
    Description: Please enter a Subnet Group Name
    Type: String

  VPCId:
    Description: Specify VPC id.
    Type: AWS::EC2::VPC::Id

  DBAppCIDR:
    Default: '10.4.13.0/24.10.4.14.0/24'
    Description: Please enter the CIDR blocks(comma seperated)
    Type: CommaDelimitedList 

Resources:
  MysqlDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: Sarge default DB Subnet Group
      DBSubnetGroupName: !Ref DBSubnetGroupName
      SubnetIds: !Ref DBSubnetGroupIDs
      Tags: 
      - Key: Name
        Value: MysqlDBSubnetGroup

  MysqlDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group For Mysql RDS resources
      GroupName: MysqlDBSecurityGroup;
      VpcId: !Ref VPCId
      SecurityGroupIngress:  |
        #!PyPlate
        output = []
        for cidr in params['DBAppCIDR']:
            output.append({
                "IpProtocol": 'tcp',
                "FromPort": params['DBPort'],
                "ToPort": params['DBPort'],
                "CidrIp": cidr
            })
      Tags:
      - Key: Name
        Value: MysqlDBSecurityGroup
      - Key: Tier
        Value: Database
      VpcId: !Ref VPCId

  AppDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceID
      DBName: !Ref DBName
      Port: !Ref DBPort
      Engine: MySQL
      EngineVersion: 8.0.16
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: true
      DBSubnetGroupName: !Ref DBSubnetGroupName
      VPCSecurityGroups:
      - !Ref MysqlDBSecurityGroup
      Tags:
      - Key: Name
        Value: 'MysqlDBInstance'